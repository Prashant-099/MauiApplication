@page "/UserAddEdit"
@using Models
@inject IJSRuntime JS
@using MauiAppFB.Services
@inject USerRoleService UserRoleService
@if (IsVisible)
{
    <div class="modal fade show d-block" tabindex="-1" role="dialog" style="background-color: rgba(0, 0, 0, 0.5);">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@Title</h5>
                    <button type="button" class="btn-close" @onclick="CloseModal"></button>
                </div>
                <div class="modal-body">
                    <EditForm Model="@User" OnValidSubmit="HandleValidSubmit">
                        <DataAnnotationsValidator />
                        <ValidationSummary />

                        <div class="mb-3">
                            <label for="UserFirstName">First Name:</label>
                            <InputText id="UserFirstName" @bind-Value="User.UserFirstName" class="form-control" />
                        </div>
                        <div class="mb-3">
                            <label for="UserLastName">Last Name:</label>
                            <InputText id="UserLastName" @bind-Value="User.UserLastName" class="form-control" />
                        </div>

                        <div class="mb-3">
                            <label for="UserGender">Gender:</label>
                            <InputSelect id="UserGender" @bind-Value="User.UserGender" class="form-control" >
                                <option>Select your Gender</option>
                                <option value="Male">Male</option>
                                <option value="Female">Female</option>
                                </InputSelect>
                        </div>
                        <div class="mb-3">
                            <label for="UserDob">DOB:</label>
                            <InputDate id="UserDob" @bind-Value="User.UserDob" class="form-control" />
                        </div>
                        <div class="mb-3">
                            <label for="UserEmail">Email:</label>
                            <InputText id="UserEmail" @bind-Value="User.UserEmail" class="form-control" />
                        </div>
                        <div class="mb-3">
                            <label for="userAddress">Address:</label>
                            <InputText id="userAddress" @bind-Value="User.UserAddress" class="form-control" />
                        </div>

                        <div class="mb-3">
                            <label for="UserMobile">UserMobile:</label>
                            <InputText id="UserMobile" @bind-Value="User.UserPhone" class="form-control" />
                        </div>

                        <div class="mb-3">
                            <label for="UserRoleId">Role:</label>
                            <InputSelect id="UserRoleId" @bind-Value="User.UserRoleId" class="form-control" @onclick="LoadUserRoles" placeholder="enter role">
                                @foreach (var role in roles)
                                {


                                    <option value="@role.RoleUuid">@role.RoleName</option>

                                }


                            </InputSelect>
                        </div>

                        <div class="mb-3">
                            <label for="UserPassword">UserPassword:</label>
                            <InputText id="UserPassword" @bind-Value="User.UserPassword" class="form-control" />
</div>
                            <div class="mt-3">
                                <button type="submit" class="btn btn-primary">@ButtonText</button>
                                <button type="button" class="btn btn-secondary" @onclick="CloseModal">Cancel</button>
                            </div>

                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
}

@code {
    [Parameter] public User User { get; set; }
    [Parameter] public string Title { get; set; } = "Add User";
    [Parameter] public string ButtonText { get; set; } = "Add";
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public EventCallback OnSubmit { get; set; }
    private List<UserRoles> roles = new();

    private async Task HandleValidSubmit()
    {
        await OnSubmit.InvokeAsync();
    }

    private async Task CloseModal() => await OnClose.InvokeAsync();

    private async Task LoadUserRoles()
    {

        var response = await UserRoleService.GetUserRolesAsync();
        roles = response.userRoles;

    }
}
