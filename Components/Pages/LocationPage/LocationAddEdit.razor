@page "/LocationAddEdit"
@using Models
@inject IJSRuntime JS

@if (IsVisible)
{
        <div class="modal fade show d-block" tabindex="-1" role="dialog" style="background-color: rgba(0, 0, 0, 0.5);">
            <div class="modal-dialog" role="document">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title">@Title</h5>
                        <button type="button" class="btn-close" @onclick="CloseModal"></button>
                    </div>
                    <div class="modal-body">
                        <EditForm Model="@Location" OnValidSubmit="HandleValidSubmit">
                            <DataAnnotationsValidator />
                            <ValidationSummary />

                            <div class="mb-3">
                                <label for="LocationName">Location Name:</label>
                                        <InputText id="LocationName" @bind-Value="Location.LocationName" class="form-control" />
                            </div>
                            
                            <div class="mb-3">
                                <label for="loccode">Location StationCode:</label>
                            <InputText id="loccode" @bind-Value="Location.LocationCode" class="form-control" />
                            </div>

                        <div class="mb-3">
                            <label for="locpincode">Location PINCODE:</label>
                            <InputText id="locpincode" @bind-Value="Location.LocationPincode" class="form-control" />
                        </div>
                        <div class="mb-3">
                            <label for="LocationType">Location Type:</label>
                            <InputSelect id="LocationType" @bind-Value="Location.LocationType" class="form-control" >
                             <option>STATION</option>
                                <option>PORT</option>
                            
                            </InputSelect>
                        </div>
                            <div class="mt-3">
                                <button type="submit" class="btn btn-primary">@ButtonText</button>
                                <button type="button" class="btn btn-secondary" @onclick="CloseModal">Cancel</button>
                            </div>
                        </EditForm>
                    </div>
                </div>
            </div>
        </div>
}

@code {
    [Parameter] public Locations Location { get; set; } 
    [Parameter] public string Title { get; set; } = "Add Location";
    [Parameter] public string ButtonText { get; set; } = "Add";
    [Parameter] public bool IsVisible { get; set; }
    [Parameter] public EventCallback OnClose { get; set; }
    [Parameter] public EventCallback OnSubmit { get; set; }

    private async Task HandleValidSubmit()
    {
        await OnSubmit.InvokeAsync();
    }

    private async Task CloseModal() => await OnClose.InvokeAsync();
}
